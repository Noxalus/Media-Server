version: '3.7'

networks:
  gitea:
    external: false

volumes:
  cache:
  redis:
  es:

##############
# Containers #
##############
services:
  #############
  # Portainer #
  #############
  portainer:
    container_name: portainer
    restart: unless-stopped
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - ${PATH_DOCKER}/portainer/config:/config
      - /var/run/docker.sock:/var/run/docker.sock
  ########
  # Plex #
  ########
  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    restart: unless-stopped
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      # - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environment:
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - TZ=${TIME_ZONE}
      - PLEX_CLAIM=${PLEX_CLAIM_CODE}
    hostname: plex
    volumes:
      - ${PATH_MEDIA}:/media
      - ${PATH_PLEX}/config:/config
      - ${PATH_PLEX}/transcode:/transcode
      - ${PATH_MEDIA}:/data
  ##############
  # Jellyfin   #
  ##############
  # jellyfin:
  #   container_name: jellyfin
  #   image: lscr.io/linuxserver/jellyfin:latest
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIME_ZONE}
  #     - JELLYFIN_PublishedServerUrl=192.168.0.40 #optional
  #   volumes:
  #     - ${PATH_JELLYFIN}/config:/config
  #     - ${PATH_MEDIA}:/data/tvshows
  #     - ${PATH_MEDIA}:/data/movies
  #   ports:
  #     - 8096:8096
  #     - 8920:8920 #optional
  #     - 7359:7359/udp #optional
  #     # - 1900:1900/udp #optional
  ############
  # Tautulli #
  ############
  tautulli:
    container_name: tautulli
    image: tautulli/tautulli:latest
    restart: unless-stopped
    ports:
      - 8181:8181/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: tautulli
    volumes:
      - ${PATH_DOCKER}/tautulli/config:/config
  ############
  # Prowlarr #
  ############
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${PATH_DOCKER}/prowlarr/config:/config
    ports:
      - 9696:9696
  ###########
  # Jackett #
  ###########
  jackett:
    container_name: jackett
    image: lscr.io/linuxserver/jackett:latest
    restart: unless-stopped
    ports:
      - 9117:9117/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: jackett
    volumes:
      - ${PATH_DOCKER}/jackett/config:/config
      - ${PATH_DOWNLOAD}:/downloads
  ################
  # FlareSolverr #
  ################
  flare-solver:
    container_name: flaresolverr
    image: flaresolverr/flaresolverr:latest
    restart: unless-stopped
    ports:
      - 8191:8191
  # ##########
  # # Lidarr #
  # ##########
  # lidarr:
  #   container_name: lidarr
  #   image: linuxserver/lidarr:latest
  #   restart: unless-stopped
  #   ports:
  #     - 8686:8686/tcp
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIME_ZONE}
  #   hostname: lidarr
  #   volumes:
  #     - ${PATH_DOCKER}/lidarr/config:/config
  #     - ${PATH_DOWNLOAD}:/downloads
  #     - ${PATH_MEDIA}/Musics:/media
  #######################
  # Radarr (for Movies) #
  #######################
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7878:7878/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: radarr
    volumes:
      - ${PATH_DOCKER}/radarr/config:/config
      - ${PATH_DOWNLOAD}:/downloads
      - ${PATH_DOWNLOAD}:/data
      - ${PATH_MEDIA}:/media
  #############################
  # Radarr (for Anime Movies) #
  #############################
  radarr-animes:
    container_name: radarr-animes
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7879:7879/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: radarr
    volumes:
      - ${PATH_DOCKER}/radarr-animes/config:/config
      - ${PATH_DOWNLOAD}:/downloads
      - ${PATH_DOWNLOAD}:/data
      - ${PATH_MEDIA}/Movies/Animations/Animes:/media
  ###############################
  # Radarr (for Cartoon Movies) #
  ###############################
  radarr-cartoons:
    container_name: radarr-cartoons
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7880:7880/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: radarr
    volumes:
      - ${PATH_DOCKER}/radarr-cartoons/config:/config
      - ${PATH_DOWNLOAD}:/downloads
      - ${PATH_DOWNLOAD}:/data
      - ${PATH_MEDIA}/Movies/Animations/Cartoons:/media
  #######################
  # Sonarr (for Animes) #
  #######################
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - 8989:8989/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: sonarr
    volumes:
      - ${PATH_DOCKER}/sonarr/config:/config
      - ${PATH_DOWNLOAD}:/downloads
      - ${PATH_DOWNLOAD}:/data
      - ${PATH_MEDIA}:/media
  #######################
  # Sonarr (for Series) #
  #######################
  sonarr-series:
    container_name: sonarr-series
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - 8990:8990/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    hostname: sonarr
    volumes:
      - ${PATH_DOCKER}/sonarr-series/config:/config
      - ${PATH_DOWNLOAD}:/downloads
      - ${PATH_DOWNLOAD}:/data
      - ${PATH_MEDIA}:/media
  # #########
  # # Beets #
  # #########
  # beets:
  #   container_name: beets
  #   image: linuxserver/beets:latest
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIME_ZONE}
  #   labels:
  #     - stack=media
  #   hostname: beets
  #   volumes:
  #     - ${PATH_DOCKER}/beets/config:/config
  #     - ${PATH_DOCKER}/beets/downloads/:/downloads
  #     - ${PATH_MEDIA}/Musics:/music
  #   ports:
  #     - 8337:8337
  #   restart: unless-stopped
  ################
  # Transmission #
  ################
  transmission:
    image: haugene/transmission-openvpn:latest
    container_name: transmission
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - 9091:9091
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - LOCAL_NETWORK=192.168.0.0/16
    logging:
      driver: json-file
      options:
        max-size: 10m
    volumes:
      - ${PATH_DOCKER}/transmission/config:/config
      - ${PATH_DOWNLOAD}:/data
      - ${PATH_DOWNLOAD}:/downloads
      - ${PATH_DOWNLOAD}:/watch
      - ${PATH_MEDIA}:/media
  ##############
  # EmulatorJS #
  ##############
  # emulatorjs:
  #   image: lscr.io/linuxserver/emulatorjs:latest
  #   container_name: emulatorjs
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIME_ZONE}
  #     - SUBFOLDER=/ # optional
  #   volumes:
  #     - ${PATH_DOCKER}/emulatorjs/config:/config
  #     - ${PATH_EMULATOR}:/data
  #   ports:
  #     - 3000:3000
  #     # - 80:80
  #     # - 4001:4001 # optional
  ############
  # TubeSync #
  ############
  tubesync:
    image: ghcr.io/meeb/tubesync:latest
    container_name: tubesync
    restart: unless-stopped
    ports:
      - 4848:4848
    volumes:
      - ${PATH_DOCKER}/tubesync/config:/config
      - ${TUBESYNC_PATH_MEDIA}:/downloads
    environment:
      - TZ=${TIME_ZONE}
      - PUID=${PUID}
      - PGID=${PGID}
  #################
  # TubeArchivist #
  #################
  # tubearchivist:
  #   container_name: tubearchivist
  #   restart: unless-stopped
  #   image: bbilly1/tubearchivist
  #   ports:
  #     - 8000:8000
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   volumes:
  #     - ${TA_PATH_MEDIA}:/youtube
  #     - cache:/cache
  #     # - ${PATH_DOCKER}/tubearchivist/resolv.conf:/etc/resolv.conf
  #   environment:
  #     - ES_URL=http://archivist-es:9200 # needs protocol e.g. http and port
  #     - REDIS_HOST=archivist-redis # don't add protocol
  #     - HOST_UID=${PUID}
  #     - HOST_GID=${PGID}
  #     - TZ=${TIME_ZONE}
  #     - TA_HOST=${TA_HOSTNAME}
  #     - TA_USERNAME=${TA_USERNAME}
  #     - TA_PASSWORD=${TA_PASSWORD}
  #     - ELASTIC_PASSWORD=${TA_ELASTIC_PASSWORD}
  #   depends_on:
  #     - archivist-es
  #     - archivist-redis
  # archivist-redis:
  #   image: redislabs/rejson # for arm64 use bbilly1/rejson
  #   container_name: archivist-redis
  #   restart: unless-stopped
  #   expose:
  #     - "6379"
  #   volumes:
  #     - redis:/data
  #   depends_on:
  #     - archivist-es
  # archivist-es:
  #   image: bbilly1/tubearchivist-es # only for amd64, or use official es 8.5.1
  #   container_name: archivist-es
  #   restart: unless-stopped
  #   environment:
  #     - "ELASTIC_PASSWORD=${TA_ELASTIC_PASSWORD}"
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "xpack.security.enabled=true"
  #     - "discovery.type=single-node"
  #     - "path.repo=/usr/share/elasticsearch/data/snapshot"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es:/usr/share/elasticsearch/data # check for permission error when using bind mount, see readme
  #   expose:
  #     - "9200"
  #############
  # Navidrome #
  #############
  # navidrome:
  #   image: deluan/navidrome:latest
  #   container_name: navidrome
  #   restart: unless-stopped
  #   ports:
  #     - "4533:4533"
  #   environment:
  #     # Optional: put your config options customization here. Examples:
  #     ND_SCANSCHEDULE: 1h
  #     ND_LOGLEVEL: info
  #     ND_SESSIONTIMEOUT: 24h
  #     ND_BASEURL: ""
  #   volumes:
  #     - "${PATH_DOCKER}/navidrome/data:/data"
  #     - "${PATH_NAVIDROME_DATA}:/music:ro"
  ##########
  # PiHole #
  ##########
  # pihole:
  #   image: pihole/pihole:latest
  #   container_name: pihole
  #   restart: unless-stopped
  #   user: 0:0 # should be owner of volumes
  #   # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
  #     - "80:80/tcp"
  #   environment:
  #     TZ: '${TIME_ZONE}'
  #     # WEBPASSWORD: 'set a secure password here or it will be random'
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - './etc-pihole:/etc/pihole'
  #     - './etc-dnsmasq.d:/etc/dnsmasq.d'
  #   #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #   cap_add:
  #     - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
  #########
  # Gitea #
  #########
  # gitea:
  #   image: gitea/gitea:latest-rootless
  #   container_name: gitea
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #     - "222:22"
  #   networks:
  #     - gitea
  #   volumes:
  #     - ${PATH_GITEA_DATA}:/var/lib/gitea
  #     - ${PATH_DOCKER}/gitea/config:/etc/gitea
  #     - /etc/localtime:/etc/localtime:ro
